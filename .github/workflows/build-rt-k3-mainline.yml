
name: build rt-k3-mainline
permissions:
  contents: write
on: 
  workflow_dispatch:
    inputs:
      eth0:
        description: 'Your Eth0 Mac'
        required: true
        default: '00:11:22:33:44:55'
      Wlan0:
        description: 'Your Eth1(2.4g) Mac'
        required: true
        default: '00:11:22:33:44:66'
      Wlan1:
        description: 'Your Eth2(5g) Mac'
        required: true
        default: '00:11:22:33:44:77'
  release:
    types: [published]
  push:
    tags:
    - 'v*'
env:
  ET0MACADDR: ${{ github.event.inputs.eth0 }}
  MACADDR1_24G: ${{ github.event.inputs.Wlan0 }}
  MACADDR2_5G: ${{ github.event.inputs.Wlan1 }}
  ACTIONS_ALLOW_UNSECURE_COMMANDS: true
jobs:
  build:
    runs-on: ubuntu-20.04
    if: github.event.repository.owner.id == github.event.sender.id
    steps:
    - name: Checkout Code
      uses: actions/checkout@v2
    
    - name: Update && install packages    
      run: |
        sudo apt-get update
        sudo apt-get install -y libncurses5 libncurses5-dev m4 bison gawk flex g++ \
        gengetopt git zlib1g-dev autoconf autopoint libtool-bin shtool autogen \
        mtd-utils intltool sharutils docbook-xsl-* texinfo dos2unix xsltproc \
        u-boot-tools device-tree-compiler qemu gperf liblzo2-dev uuid-dev build-essential \
        lzma-dev liblzma-dev lzma binutils-dev patch cmake intltool libglib2.0-dev \
        gtk-doc-tools gcc-arm-linux-gnueabi automake perl
        sudo apt install automake-1.15
        #sudo apt-get install -y libtool-bin cmake libproxy-dev uuid-dev liblzo2-dev autoconf automake bash bzip2 diffutils file flex m4 g++ gawk groff-base libncurses5-dev libtool libslang2 make patch perl pkg-config shtool subversion tar texinfo zlib1g zlib1g-dev git gettext libexpat1-dev libssl-dev cvs gperf unzip python libxml-parser-perl gcc-multilib gconf-editor libxml2-dev g++-multilib gitk libncurses5 libncurses5-dev libvorbis-dev git autopoint autogen sed build-essential intltool libglib2.0-devxutils-dev lib32z1-dev lib32stdc++6 xsltproc gtk-doc-tools
        sudo dpkg --add-architecture i386
        sudo apt-get update
        sudo apt-get install lsb-core  libstdc++6:i386
        
    - name: Clone source code and set up directories
      run: |       
       git clone -b 386.12_x https://github.com/kemp-zz/asuswrt-merlin.ng.git
       git clone https://github.com/godcong/k3screenctrl asuswrt-merlin.ng/release/src/router/k3screenctrl 
       git clone https://github.com/RMerl/am-toolchains.git
       sudo mkdir -p /media/asuswrt/
       sudo mkdir -p /opt/images/

    - name: Setup toolchain and workspace
      run: |       
        sudo ln -s $(pwd)/am-toolchains/brcm-arm-hnd /opt/toolchains
        sudo ln -s $(pwd)/am-toolchains/brcm-arm-sdk/hndtools-arm-linux-2.6.36-uclibc-4.5.3 /opt/brcm-arm
        sudo ln -sf bash /bin/sh
        echo "LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:/opt/toolchains/crosstools-arm-gcc-5.3-linux-4.1-glibc-2.22-binutils-2.25/usr/lib" >> $GITHUB_ENV
        echo "TOOLCHAIN_BASE=/opt/toolchains" >> $GITHUB_ENV
        echo "PATH=\$PATH:/opt/toolchains/crosstools-arm-gcc-5.3-linux-4.1-glibc-2.22-binutils-2.25/usr/bin" >> $GITHUB_ENV
        echo "PATH=\$PATH:/opt/toolchains/crosstools-aarch64-gcc-5.3-linux-4.1-glibc-2.22-binutils-2.25/usr/bin" >> $GITHUB_ENV  
        sudo ln -s $(pwd)/asuswrt-merlin.ng /media/asuswrt/asuswrt-merlin.ng       
        cd /media/asuswrt/asuswrt-merlin.ng
        git checkout mainline    

    - name: Modify Configuration Files
      run: |        
        cd /media/asuswrt/asuswrt-merlin.ng/release/src-rt-7.14.114.x/src/cfe/build/broadcom/bcm947xx/compressed
        sed -i 's/^\(et0macaddr=\).*/\1${{ env.ET0MACADDR }}/g' rt-k3_nvram.txt
        sed -i 's/^\(1:macaddr=\).*/\1${{ env.MACADDR1_24G }}/g' rt-k3_nvram.txt
        sed -i 's/^\(2:macaddr=\).*/\1${{ env.MACADDR2_5G }}/g' rt-k3_nvram.txt
        
    - name: Build Firmware
      run: |
        export PATH=\$PATH:/opt/brcm-arm/bin
        cd /media/asuswrt/asuswrt-merlin.ng/release/src-rt
        sed -i 's/EXTENDNO=.*/&_${{ github.run_number }}/g' version.conf
        cd /media/asuswrt/asuswrt-merlin.ng/release/src-rt-7.14.114.x/src
        make rt-k3
        cd /media/asuswrt/asuswrt-merlin.ng/release/src-rt-7.14.114.x/src/cfe/
        make
        echo "build cfe done"
        

    - name: Move file && Checksum
      run: |
        sudo mv -f /media/asuswrt/asuswrt-merlin.ng/release/src-rt-7.14.114.x/src/image/*.trx /opt/images/
        sudo cp /media/asuswrt/asuswrt-merlin.ng/release/src-rt-7.14.114.x/src/cfe/build/broadcom/bcm947xx/compressed/rt-k3_nvram.txt /opt/images/
        sudo cp /media/asuswrt/asuswrt-merlin.ng/release/src-rt-7.14.114.x/src/cfe/cfe*.bin /opt/images/
        #sudo cp /media/asuswrt/asuswrt-merlin.ng/release/src-rt/version.conf /opt/images/
        
        sha256sum /opt/images/* > /opt/images/checksum.txt

    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        files: "/opt/images/*.*,release/src-rt-7.14.114.x/src/cfe/cfe_rt-k3.bin"  
        tag_name: ${{ env.BUILD_DATE }}_mainline_k3_${{ env.MERLIN_TAG }}
        body: |
          this is only a latest build from mainline
          version: https://github.com/godcong/asuswrt-merlin.ng/commit/${{ env.MERLIN_VERSION }}
        token: ${{ secrets.GITHUB_TOKEN }}
